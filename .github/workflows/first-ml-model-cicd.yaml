name: first-ml-model-cicd

on:
  push:
    paths:
      - src/**
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:

      - name: Shorten commit id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: timee98642/first-ml-model:${{ env.COMMIT_ID }}
    outputs:
      commit_id: ${{ env.COMMIT_ID }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:

      - uses: actions/checkout@v3

      - name: Modify Docker Tag in Helm values
        shell: bash
        run: |
          echo ${{needs.ci.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/first-ml-model/values-dev.yaml

      - name: Commit YAML changes to GitHub
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updates values.yaml with commit ${{needs.ci.outputs.commit_id}}'

      - name: Install argocd
        shell: bash
        run: |
          curl -ksSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd

      - name: argocd login
        shell: bash
        run: |
          argocd login argocd-server.argocd --insecure --grpc-web --username admin --password ${{ secrets.ARGOCD_PASSWORD }}
      
      - name: Ensure argocd repo and app
        shell: bash
        run: |
  
          repo="https://github.com/divakaivan-org/first-ml-model.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          argocd app get first-ml-model || argocd app create first-ml-model \
            --repo $repo \
            --path charts/first-ml-model \
            --dest-namespace dev \
            --dest-server https://kubernetes.default.svc \
            --values values-dev.yaml \
            --revision master \
            --sync-policy manual \
            --sync-option CreateNamespace=true
      
      - name: Argocd app sync
        shell: bash
        run: |
          argocd app sync first-ml-model
          argocd app wait first-ml-model --timeout 180
